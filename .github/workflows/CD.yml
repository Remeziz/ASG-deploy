name: CD
on:
  workflow_dispatch:
    inputs:
      runE2eTests:
        description: Run E2E tests
        type: boolean
        default: false
  push:
    branches: ["main"]

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform
        run: terraform apply -auto-approve

      - name: Get ASG Names
        id: get-asg-names
        run: |
          asg_names=$(aws autoscaling describe-auto-scaling-groups --query 'AutoScalingGroups[*].AutoScalingGroupName' --output json | jq -r '.[]' | tr -d '\r')
          asg_name_1=$(echo "$asg_names" | sed -n '1p')
          asg_name_2=$(echo "$asg_names" | sed -n '2p')
          echo "asg_name_1=$asg_name_1"
          echo "asg_name_2=$asg_name_2"
          if [ -z "$asg_name_1" ] || [ -z "$asg_name_2" ]; then
            echo "Error: One or both ASG names are empty"
            exit 1
          fi
          echo "{asg_name_1}={$asg_name_1}" >> $GITHUB_OUTPUT
          echo "{asg_name_2}={$asg_name_2}" >> $GITHUB_OUTPUT
        shell: bash
        
      - name: Process ASG Names
        run: |
          echo "ASG Name 1: ${{ env.asg_name_1 }}"
          echo "ASG Name 2: ${{ env.asg_name_2 }}"
        
  update-asg:
    needs: terraform
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Update ASG desired capacity
        run: |
          DESIRED_CAPACITY=1
          for asg_name in "${{ needs.terraforma.outputs.asg_name_1 }}" "${{ needs.terraform.outputs.asg_name_2 }}"; do
            echo "Updating ASG: $asg_name"
            if [ -z "$asg_name" ]; then
              echo "Error: ASG name is empty"
              exit 1
            fi
            ASG_EXISTS=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names "$asg_name" --query 'AutoScalingGroups[0].AutoScalingGroupName' --output text)
            if [ "$ASG_EXISTS" == "$asg_name" ]; then
              aws autoscaling update-auto-scaling-group --auto-scaling-group-name "$asg_name" --desired-capacity $DESIRED_CAPACITY
            else
              echo "ASG $asg_name not found"
            fi
          done
